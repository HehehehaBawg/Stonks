name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  JGENESIS_VERSION: 0.6.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install latest stable Rust toolchain
      run: |
        rustup update

    - name: Install latest nightly Rust toolchain
      run: |
        rustup toolchain add nightly --component rustfmt --component rust-src

    - name: Install system library dependencies
      run: |
        sudo apt update && sudo apt install -y libsdl2-dev libgtk-3-dev

    - name: Check formatting
      run: |
        cargo +nightly fmt --check

    - name: Build
      run: |
        cargo build

    - name: Check Clippy warnings
      run: |
        cargo clippy -- -D warnings

    - name: Run tests
      run: |
        cargo test
  build-web:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        run: |
          rustup update

      - name: Install latest nightly Rust toolchain
        run: |
          rustup toolchain add nightly --component rust-src --component clippy

      - name: Install wasm-pack
        run: |
          cargo install wasm-pack

      - name: Build web
        run: |
          cd frontend/jgenesis-web && ./build.sh

      - name: Check Clippy warnings for web
        run: |
          cd frontend/jgenesis-web && cargo +nightly clippy --target wasm32-unknown-unknown
  linux-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        run: |
          rustup update

      - name: Install libsdl2 and libgtk-3
        run: |
          sudo apt-get update && sudo apt-get install -y libsdl2-dev libgtk-3-dev

      - name: Build release
        run: |
          cargo build --profile release-lto

      - name: Compress binaries
        run: |
          tar -czvf jgenesis-${JGENESIS_VERSION}-linux-x86_64.tar.gz LICENSE -C target/release-lto jgenesis-cli jgenesis-gui

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-bin
          path: jgenesis-${{ env.JGENESIS_VERSION }}-linux-x86_64.tar.gz
          retention-days: 1
  windows-release:
    runs-on: ubuntu-latest

    env:
      SDL_VERSION: 2.28.5
      DXC_RELEASE_TAG: v1.7.2308
      DXC_ZIP_FILE: dxc_2023_08_14.zip

    steps:
      - uses: actions/checkout@v3

      - name: Install latest stable Rust toolchain
        run: |
          rustup update

      - name: Install mingw32
        run: |
          sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Install Windows x64 Rust build target
        run: |
          rustup target add x86_64-pc-windows-gnu

      - name: Download & extract Windows SDL2 libraries
        run: |
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          wget https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL2-$SDL_VERSION-win32-x64.zip && \
          tar -xzvf SDL2-devel-$SDL_VERSION-mingw.tar.gz && \
          unzip SDL2-$SDL_VERSION-win32-x64.zip

      - name: Download & extract DirectX shader compiler
        run: |
          mkdir dxcompiler && \
          cd dxcompiler && \
          wget https://github.com/microsoft/DirectXShaderCompiler/releases/download/$DXC_RELEASE_TAG/$DXC_ZIP_FILE && \
          unzip $DXC_ZIP_FILE

      - name: Build release
        run: |
          RUSTFLAGS="-Clink-arg=-ISDL2-$SDL_VERSION/x86_64-w64-mingw32/include -Clink-arg=-LSDL2-$SDL_VERSION/x86_64-w64-mingw32/lib" \
          cargo build --profile release-lto --target x86_64-pc-windows-gnu

      - name: Compress binaries
        run: |
          mv LICENSE LICENSE-jgenesis.txt && \
          mv target/x86_64-pc-windows-gnu/release-lto/*.exe ./ && \
          mv dxcompiler/bin/x64/*.dll ./ && \
          mv dxcompiler/LICENSE* ./ && \
          zip -r jgenesis-${JGENESIS_VERSION}-windows-x86_64.zip LICENSE* README-SDL.txt *.dll jgenesis-cli.exe jgenesis-gui.exe

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: windows-x86_64-bin
          path: jgenesis-${{ env.JGENESIS_VERSION }}-windows-x86_64.zip
          retention-days: 1
